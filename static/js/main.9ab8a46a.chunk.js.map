{"version":3,"sources":["Header/Header.js","Homepage/Homepage.js","About/About.js","AccordionDrawer/AccordionDrawer.js","Projects/Projects.js","Contact/Contact.js","Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","useState","view","setView","role","aria-label","className","href","alt","onClick","Homepage","id","About","download","counter","AccordionDrawer","title","content","link","cta","isOpen","setIsOpen","iconState","setIconState","accContent","target","Projects","Contact","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9ab8a46a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport './header.css'\r\n\r\nconst Header = () => {\r\n\r\n  const [view, setView] = useState('home')\r\n\r\n  if (view === 'home') {\r\n    return (\r\n      <nav role=\"banner navigation\" aria-label=\"Main Navigation\" className=\"header-home\">\r\n        <a href=\"#home-section\" alt=\"go to home\" className=\"selected\" onClick={() => setView('home')}>Home</a>\r\n        <a href=\"#about-section\" alt=\"go to about\" onClick={() => setView('about')}>About</a>\r\n        <a href=\"#project-section\" alt=\"go to projects\" onClick={() => setView('projects')}>Projects</a>\r\n        <a href=\"#contact-section\" alt=\"go to contact\" onClick={() => setView('contact')}>Contact</a>\r\n      </nav>\r\n    )\r\n  } else if (view === 'about') {\r\n    return (\r\n      <nav role=\"banner navigation\" aria-label=\"Main Navigation\" className=\"header-about\">\r\n        <a href=\"#home-section\" alt=\"go to home\" onClick={() => setView('home')}>Home</a>\r\n        <a href=\"#about-section\" alt=\"go to about\" className=\"selected\" onClick={() => setView('about')}>About</a>\r\n        <a href=\"#project-section\" alt=\"go to projects\" onClick={() => setView('projects')}>Projects</a>\r\n        <a href=\"#contact-section\" alt=\"go to contact\" onClick={() => setView('contact')}>Contact</a>\r\n      </nav>\r\n    )\r\n  } else if (view === 'projects') {\r\n    return (\r\n      <nav role=\"banner navigation\" aria-label=\"Main Navigation\" className=\"header-projects\">\r\n        <a href=\"#home-section\" alt=\"go to home\" onClick={() => setView('home')}>Home</a>\r\n        <a href=\"#about-section\" alt=\"go to about\" onClick={() => setView('about')}>About</a>\r\n        <a href=\"#project-section\" alt=\"go to projects\" className=\"selected\" onClick={() => setView('projects')}>Projects</a>\r\n        <a href=\"#contact-section\" alt=\"go to contact\" onClick={() => setView('contact')}>Contact</a>\r\n      </nav>\r\n    )\r\n  } else if (view === 'contact') {\r\n    return (\r\n      <nav role=\"banner navigation\" aria-label=\"Main Navigation\" className=\"header-contact\">\r\n        <a href=\"#home-section\" alt=\"go to home\" onClick={() => setView('home')}>Home</a>\r\n        <a href=\"#about-section\" alt=\"go to about\" onClick={() => setView('about')}>About</a>\r\n        <a href=\"#project-section\" alt=\"go to projects\" onClick={() => setView('projects')}>Projects</a>\r\n        <a href=\"#contact-section\" alt=\"go to contact\" className=\"selected\" onClick={() => setView('contact')}>Contact</a>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport './homepage.css'\r\n\r\nconst Homepage = () => {\r\n  return (\r\n    <main role=\"main\" id=\"home-section\" className=\"homepage\">\r\n      <h1>HUNTER<br/>TREADAWAY</h1>\r\n      <p className=\"character-container\">q h</p>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Homepage","import React from 'react'\r\nimport './about.css'\r\n\r\nconst About = () => {\r\n  return (\r\n    <main role=\"main\" id=\"about-section\" className=\"about\">\r\n      <h1>ABOUT</h1>\r\n      <div className=\"about-content\">\r\n        <h3 className=\"about-headline\">Hunter is a web developer residing in Los Angeles, CA. He aims to surprise users with unexpected interactions and design choices. He enjoys working with:</h3>\r\n        <p>JavaScript | HTML5 | CSS3</p>\r\n        <p>React | React-Native | ViroReact | Styled-Components | D3 | jQuery | node.js</p>\r\n        <p>MySQL | PostgreSQL | MongoDB</p>\r\n        <p>windows | linux | mac</p>\r\n      </div>\r\n      <a href=\"./downloadFiles/Hunter_Treadaway_Software_Engineering_Resume.pdf\" download>Download My Resume</a>\r\n      {/* <img src={require(\"../img/SoftCuddly.png\")} alt=\"soft and cuddly game map\" /> */}\r\n      <p className=\"character-container\">yuyuy</p>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default About","import React, { useState } from 'react'\r\nimport './accordiondrawer.css'\r\n\r\nlet counter = 0;\r\n\r\nconst AccordionDrawer = ({title, content, link, cta}) => {\r\n\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [iconState, setIconState] = useState('closed')\r\n\r\n  let accContent = null;\r\n\r\n  const onClickOpen = () => {\r\n    if (counter % 2 === 0) {\r\n      setIsOpen(!isOpen)\r\n      setIconState('open')\r\n      counter++\r\n    } else {\r\n      setIsOpen(!isOpen)\r\n      setIconState('closed')\r\n      counter++\r\n    }\r\n  }\r\n\r\n  if (isOpen === true) {\r\n    accContent =\r\n      <div className=\"accordion-content\">\r\n        <p>{content}</p>\r\n        <a className=\"project-cta\" href={link} target=\"blank\" alt={`go to ${title} source code or live example`}>{cta}</a>\r\n      </div>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <div className=\"accordion-header\">\r\n      <p>{title}</p>\r\n      <i id={iconState} className=\"fa fa-plus\" onClick={onClickOpen}></i>\r\n    </div>\r\n      <div>{accContent}</div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default AccordionDrawer","import React from 'react'\r\nimport AccordionDrawer from '../AccordionDrawer/AccordionDrawer'\r\nimport './projects.css'\r\n\r\nconst Projects = () => {\r\n  \r\n  const htContent = 'this website right here!'\r\n  const htLink = ''\r\n  const htCta = 'View source-code on GitHub'\r\n\r\n  const threeContent = 'a fancy three.js project'\r\n  const threeLink = ''\r\n  const threeCta = 'Go To Project'\r\n\r\n  const ecommContent = 'a sampling of e-commerce components in the neumorphic design style'\r\n  const ecommLink = 'https://github.com/huntertread/e-comm-components'\r\n  const ecommCta = 'Go To Project'\r\n\r\n  const sysDisContent = \r\n    'Optimized the back end of an inherited microservice component. ' \r\n    + 'Generated and seeded 20 Million simulated property records to MongoDB hosted on t2.micro. ' \r\n    + 'Horizontally scaled proxy server layer to 3 separate t2.micro instances. '\r\n    + 'Utilized NGINX and round-robin technique to load balance throughput of test loads from Loader.io. '\r\n    + 'Achieved an average of 3000 RPS (up from benchmark of ~100 RPS) with 80ms latency (down from benchmark of ~1000ms) and less than 1% error rate. '\r\n  const sysDisLink = 'https://github.com/SDC-Designer-Designers/search-bar-booking-tool'\r\n  const sysDisCta = 'View source-code on GitHub'\r\n\r\n  return (\r\n    <main role=\"main\" id=\"project-section\" className=\"projects\">\r\n      <h1>PROJECTS</h1>\r\n      <div className=\"projects-content\">\r\n        <AccordionDrawer title={'huntertreadaway.com'} content={htContent} link={htLink} cta={htCta} />\r\n        <AccordionDrawer title={'unknown three.js projects'} content={threeContent} link={threeLink} cta={threeCta} />\r\n        <AccordionDrawer title={'e-comm components'} content={ecommContent} link={ecommLink} cta={ecommCta} />\r\n        <AccordionDrawer title={'system design capstone'} content={sysDisContent} link={sysDisLink} cta={sysDisCta} />\r\n      </div>\r\n      <p className=\"character-container\">hunter</p>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Projects","import React from 'react'\r\nimport './contact.css'\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <main role=\"main\" id=\"contact-section\" className=\"contact\">\r\n      <h1>CONTACT</h1>\r\n      <div className=\"contact-content\">\r\n        <p>email: huntertread at gmail</p>\r\n      </div>\r\n      <p className=\"character-container\">aaaa</p>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Contact","import React from 'react'\r\nimport './footer.css'\r\n\r\nconst Footer = () => {\r\n\r\n  return (\r\n    <footer role=\"contentinfo\" className=\"footer\">\r\n      <a target=\"blank\" aria-label=\"github link\" href=\"https://github.com/huntertread\" ><i className=\"fa fa-github\" /></a>\r\n      <a target=\"blank\" aria-label=\"linkedin link\" href=\"https://www.linkedin.com/in/huntertread/\" ><i className=\"fa fa-linkedin\" /></a>\r\n      <a target=\"blank\" aria-label=\"instagram link\" href=\"https://www.instagram.com/protozoasaur/?hl=en\" ><i className=\"fa fa-instagram\" /></a>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\nimport Header from './Header/Header'\r\nimport Homepage from './Homepage/Homepage'\r\nimport About from './About/About'\r\nimport Projects from './Projects/Projects'\r\nimport Contact from './Contact/Contact'\r\nimport Footer from './Footer/Footer'\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Homepage />\r\n      <About />\r\n      <Projects />\r\n      <Contact />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}