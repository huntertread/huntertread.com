{"version":3,"sources":["Header/HamburgerNav/OpenBurger/OpenBurger.js","Header/HamburgerNav/HamburgerNav.js","Header/Header.js","Homepage/Homepage.js","About/About.js","Projects/AccordionDrawer/AccordionDrawer.js","Projects/Projects.js","Contact/Contact.js","Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["OpenBurger","isOpen","setIsOpen","view","setView","burgerClick","newView","viewClass","className","onClick","href","alt","HamburgerNav","burger","useState","CSSTransition","key","classNames","timeout","enter","exit","role","aria-label","TransitionGroup","Header","minDeviceWidth","tabIndex","maxDeviceWidth","Homepage","id","About","download","AccordionDrawer","props","state","counter","iconState","bind","setIconState","onClickOpen","onKeyEnter","this","setState","event","projectList","accOpen","content","length","title","onKeyPress","link","target","cta","Component","Projects","map","project","i","Contact","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b905f55f.chunk.js","sourcesContent":["import React from 'react'\r\nimport './openburger.css'\r\n\r\nconst OpenBurger = ({ isOpen, setIsOpen, view, setView }) => {\r\n\r\n  const burgerClick = (newView) => {\r\n    setView(newView)\r\n    setIsOpen(!isOpen)\r\n  }\r\n\r\n  let viewClass = null\r\n\r\n  if (view === 'home') {\r\n    viewClass = 'open-burger-home'\r\n  } else if (view === 'about') {\r\n    viewClass = 'open-burger-about'\r\n  } else if (view === 'projects') {\r\n    viewClass = 'open-burger-projects'\r\n  } else if (view === 'contact') {\r\n    viewClass = 'open-burger-contact'\r\n  }\r\n\r\n  return (\r\n    <nav className={viewClass}>\r\n      <div className=\"close-button-container\">\r\n        <i className=\"fa fa-close\" onClick={() => setIsOpen(!isOpen)}></i>\r\n      </div>\r\n      < div className=\"nav-button-container\">\r\n        <a href=\"#home-section\" alt=\"go to home\" onClick={() => burgerClick('home')}>Home</a>\r\n        <a href=\"#about-section\" alt=\"go to about\" onClick={() => burgerClick('about')}>About</a>\r\n        <a href=\"#project-section\" alt=\"go to projects\" onClick={() => burgerClick('projects')}>Projects</a>\r\n        <a href=\"#contact-section\" alt=\"go to contact\" onClick={() => burgerClick('contact')}>Contact</a>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default OpenBurger","import React, { useState } from 'react'\r\nimport OpenBurger from './OpenBurger/OpenBurger'\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\r\nimport './hamburgernav.css'\r\n\r\nconst HamburgerNav = ({ view, setView }) => {\r\n\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  let viewClass = null\r\n\r\n  if (view === 'home') {\r\n    viewClass = 'header-home-mobile'\r\n  } else if ( view === 'about') {\r\n    viewClass = 'header-about-mobile'\r\n  } else if (view === 'projects') {\r\n    viewClass = 'header-project-mobile'\r\n  } else if (view === 'contact') {\r\n    viewClass = 'header-contact-mobile'\r\n  }\r\n\r\n  let burger;\r\n\r\n  if (isOpen === false) {\r\n    burger = null;\r\n  } else if (isOpen === true) {\r\n    burger =\r\n      <CSSTransition\r\n        key=\"1\"\r\n        classNames=\"nav-transition\"\r\n        timeout={{ enter: 500, exit: 300 }}>\r\n          <div className=\"burger-container\">\r\n            <OpenBurger isOpen={isOpen} setIsOpen={setIsOpen} setView={setView} view={view}/>;\r\n          </div>\r\n      </CSSTransition>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <nav role=\"banner navigation\" aria-label=\"main navigation\" className={viewClass}>\r\n        <i onClick={() => setIsOpen(!isOpen)} className=\"fa fa-bars\"></i>\r\n      </nav>\r\n      <TransitionGroup>\r\n        {burger}\r\n      </TransitionGroup>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HamburgerNav","import React, { useState } from 'react'\r\nimport MediaQuery from 'react-responsive'\r\nimport HamburgerNav from './HamburgerNav/HamburgerNav'\r\nimport './header.css'\r\n\r\nconst Header = () => {\r\n\r\n  const [view, setView] = useState('home')\r\n\r\n  if (view === 'home') {\r\n    return (\r\n      <div>\r\n        <MediaQuery className=\"testinngg\" minDeviceWidth={520}>\r\n          <nav role=\"banner navigation\" aria-label=\"Main Navigation\" className=\"header-home\">\r\n            <a tabIndex=\"1\" href=\"#home-section\" alt=\"navigate to home\" className=\"selected\" onClick={() => setView('home')}>Home</a>\r\n            <a tabIndex=\"2\" href=\"#about-section\" alt=\"navigate to about\" onClick={() => setView('about')}>About</a>\r\n            <a tabIndex=\"3\" href=\"#project-section\" alt=\"navigate to projects\" onClick={() => setView('projects')}>Projects</a>\r\n            <a tabIndex=\"4\" href=\"#contact-section\" alt=\"navigate to contact\" onClick={() => setView('contact')}>Contact</a>\r\n          </nav>\r\n        </MediaQuery>\r\n        <MediaQuery maxDeviceWidth={520}>\r\n          <HamburgerNav view={view} setView={setView}/>\r\n        </MediaQuery>\r\n      </div>\r\n    )\r\n  } else if (view === 'about') {\r\n    return (\r\n      <div>\r\n        <MediaQuery minDeviceWidth={520}>\r\n          <nav role=\"banner navigation\" aria-label=\"Main Navigation\" className=\"header-about\">\r\n            <a tabIndex=\"1\" href=\"#home-section\" alt=\"navigate to home\" onClick={() => setView('home')}>Home</a>\r\n            <a tabIndex=\"2\" href=\"#about-section\" alt=\"navigate to about\" className=\"selected\" onClick={() => setView('about')}>About</a>\r\n            <a tabIndex=\"3\" href=\"#project-section\" alt=\"navigate to projects\" onClick={() => setView('projects')}>Projects</a>\r\n            <a tabIndex=\"4\" href=\"#contact-section\" alt=\"navigate to contact\" onClick={() => setView('contact')}>Contact</a>\r\n          </nav>\r\n        </MediaQuery>\r\n        <MediaQuery maxDeviceWidth={520}>\r\n          <HamburgerNav view={view} setView={setView}/>\r\n        </MediaQuery>\r\n      </div>\r\n    )\r\n  } else if (view === 'projects') {\r\n    return (\r\n      <div>\r\n        <MediaQuery minDeviceWidth={520}>\r\n          <nav role=\"banner navigation\" aria-label=\"Main Navigation\" className=\"header-projects\">\r\n            <a tabIndex=\"1\" href=\"#home-section\" alt=\"navigate to home\" onClick={() => setView('home')}>Home</a>\r\n            <a tabIndex=\"2\" href=\"#about-section\" alt=\"navigate to about\" onClick={() => setView('about')}>About</a>\r\n            <a tabIndex=\"3\" href=\"#project-section\" alt=\"navigate to projects\" className=\"selected\" onClick={() => setView('projects')}>Projects</a>\r\n            <a tabIndex=\"4\" href=\"#contact-section\" alt=\"navigate to contact\" onClick={() => setView('contact')}>Contact</a>\r\n          </nav>\r\n        </MediaQuery>\r\n        <MediaQuery maxDeviceWidth={520}>\r\n          <HamburgerNav view={view} setView={setView}/>\r\n        </MediaQuery>\r\n      </div>\r\n    )\r\n  } else if (view === 'contact') {\r\n    return (\r\n      <div>\r\n        <MediaQuery minDeviceWidth={520}>\r\n          <nav role=\"banner navigation\" aria-label=\"Main Navigation\" className=\"header-contact\">\r\n            <a tabIndex=\"1\" href=\"#home-section\" alt=\"navigate to home\" onClick={() => setView('home')}>Home</a>\r\n            <a tabIndex=\"2\" href=\"#about-section\" alt=\"navigate to about\" onClick={() => setView('about')}>About</a>\r\n            <a tabIndex=\"3\" href=\"#project-section\" alt=\"navigate to projects\" onClick={() => setView('projects')}>Projects</a>\r\n            <a tabIndex=\"4\" href=\"#contact-section\" alt=\"navigate to contact\" className=\"selected\" onClick={() => setView('contact')}>Contact</a>\r\n          </nav>\r\n        </MediaQuery>\r\n        <MediaQuery maxDeviceWidth={520}>\r\n          <HamburgerNav view={view} setView={setView}/>\r\n        </MediaQuery>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport './homepage.css'\r\n\r\nconst Homepage = () => {\r\n  return (\r\n    <main role=\"main\" id=\"home-section\" className=\"homepage\">\r\n      <h1>HUNTER<br/>TREADAWAY</h1>\r\n      <p alt=\"a custom font is used which transforms alpha-numeric characters in to pixel monsters\" className=\"character-container\">q h</p>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Homepage","import React from 'react'\r\nimport './about.css'\r\n\r\nconst About = () => {\r\n  return (\r\n    <main role=\"main\" id=\"about-section\" className=\"about\">\r\n      <h1>ABOUT</h1>\r\n      <div className=\"about-content\">\r\n        <h3 className=\"about-headline\">Hunter is a Web Developer in Los Angeles, CA. He enjoys building responsive and modern UIs with test-driven, performant, and modular code.</h3>\r\n        <p>JavaScript | HTML5 | CSS3 | PHP | Bash</p>\r\n        <p>React | React-Native | ViroReact | Styled-Components | D3 | jQuery | Node.js</p>\r\n        <p>Jest | Mocha | Chai</p>\r\n        <p>MySQL | PostgreSQL | MongoDB</p>\r\n        <p>AWS EC2 | S3 | Route53</p>\r\n      </div>\r\n      <a href=\"./downloadFiles/Hunter_Treadaway_Software_Engineering_Resume.pdf\" download>Download Resume</a>\r\n      <p alt=\"a custom font is used which transforms alpha-numeric characters in to pixel monsters\" className=\"character-container\">yuyuy</p>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default About","import React, { Component } from 'react'\r\nimport './accordiondrawer.css'\r\n\r\nclass AccordionDrawer extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      counter: 0,\r\n      isOpen: false,\r\n      iconState: 'closed'\r\n    }\r\n    this.setIsOpen = this.setIsOpen.bind(this);\r\n    this.setIconState = this.setIconState.bind(this);\r\n    this.onClickOpen = this.onClickOpen.bind(this);\r\n    this.onKeyEnter = this.onKeyEnter.bind(this);\r\n  }\r\n\r\n  setIsOpen() {\r\n    this.setState({isOpen: !this.state.isOpen});\r\n  }\r\n\r\n  setIconState(state) {\r\n    this.setState({iconState: state})\r\n  }\r\n\r\n  onClickOpen() {\r\n    if (this.state.counter % 2 === 0) {\r\n      this.setIsOpen()\r\n      this.setIconState('open')\r\n      this.setState({counter: this.state.counter += 1})\r\n    } else {\r\n      this.setIsOpen()\r\n      this.setIconState('closed')\r\n      this.setState({counter: this.state.counter += 1})\r\n    }\r\n  }\r\n\r\n  onKeyEnter(event) {\r\n    if (event.key === 'Enter') {\r\n      if (this.state.counter % 2 === 0) {\r\n        this.setIsOpen()\r\n        this.setIconState('open')\r\n        this.setState({counter: this.state.counter += 1})\r\n      } else {\r\n        this.setIsOpen()\r\n        this.setIconState('closed')\r\n        this.setState({counter: this.state.counter += 1})\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    let accOpen = \"\";\r\n\r\n    if (this.state.isOpen === false) {\r\n      accOpen = \"\";\r\n    } else if (this.state.isOpen === true) {\r\n      accOpen = \"open\"\r\n    }\r\n\r\n    let projectList;\r\n\r\n    if (this.props.content.length === 1) {\r\n      projectList =\r\n        <ul className=\"accordion-list\">\r\n          <li>{this.props.content[0]}</li>\r\n        </ul>\r\n    } else if (this.props.content.length === 2) {\r\n      projectList =\r\n        <ul className=\"accordion-list\">\r\n          <li>{this.props.content[0]}</li>\r\n          <li>{this.props.content[1]}</li>\r\n        </ul>\r\n    } else if (this.props.content.length === 3) {\r\n      projectList =\r\n        <ul className=\"accordion-list\">\r\n          <li>{this.props.content[0]}</li>\r\n          <li>{this.props.content[1]}</li>\r\n          <li>{this.props.content[2]}</li>\r\n        </ul>\r\n    } else if (this.props.content.length === 4) {\r\n      projectList =\r\n        <ul className=\"accordion-list\">\r\n          <li>{this.props.content[0]}</li>\r\n          <li>{this.props.content[1]}</li>\r\n          <li>{this.props.content[2]}</li>\r\n          <li>{this.props.content[3]}</li>\r\n        </ul>\r\n    } else if (this.props.content.length === 5) {\r\n      projectList =\r\n        <ul className=\"accordion-list\">\r\n          <li>{this.props.content[0]}</li>\r\n          <li>{this.props.content[1]}</li>\r\n          <li>{this.props.content[2]}</li>\r\n          <li>{this.props.content[3]}</li>\r\n          <li>{this.props.content[4]}</li>\r\n        </ul>\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"accordion-header\">\r\n          <p>{this.props.title}</p>\r\n          <i role=\"img\" alt=\"icon, click or press to expand with additional content\" id={this.state.iconState} className=\"fa fa-plus\" onClick={this.onClickOpen} onKeyPress={this.onKeyEnter} tabIndex=\"0\"></i>\r\n        </div>\r\n        <div className={`accordion-content ${accOpen}`}>\r\n          {projectList}\r\n          <a className=\"project-cta\" href={this.props.link} target=\"blank\" alt={`go to ${this.props.title} source code or live example`}>{this.props.cta}</a>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AccordionDrawer","import React from 'react'\r\nimport AccordionDrawer from './AccordionDrawer/AccordionDrawer'\r\nimport './projects.css'\r\n\r\nconst Projects = () => {\r\n\r\n  const projectDetails = [\r\n    {\r\n      title: 'huntertread.com',\r\n      link: 'https://github.com/huntertread/personal-site',\r\n      cta: 'View Code On GitHub',\r\n      alt: 'hunter treadaway personal site project details',\r\n      content: [\r\n        'React JS',\r\n        'Mobile first design',\r\n        'WCAG Compliant',\r\n        'Unit tested with Jest',\r\n        'Google Analytics'\r\n      ]\r\n    },\r\n    {\r\n      title: 'microservice optimization',\r\n      link: 'https://github.com/SDC-Designer-Designers/search-bar-booking-tool',\r\n      cta: 'View Code on GitHub',\r\n      alt: 'system design capstone project details',\r\n      content: [\r\n        'Optimized the back end of an inherited microservice component.',\r\n        'Generated and seeded 20 Million simulated property records to MongoDB hosted on t2.micro.',\r\n        'Horizontally scaled proxy server layer to 3 separate t2.micro instances.',\r\n        'Utilized NGINX and round-robin technique to load balance throughput of test loads from Loader.io.',\r\n        'Achieved an average of 3000 RPS (up from benchmark of ~100 RPS) with 80ms latency (down from benchmark of ~1000ms) and less than 1% error rate.'\r\n      ]\r\n    },\r\n    {\r\n      title: 'three.js demo',\r\n      link: 'https://huntertread.github.io/threejsdemo/',\r\n      cta: 'Go To Project',\r\n      alt: 'three.js demo project details',\r\n      content: [\r\n        'UNDER CONSTRUCTION',\r\n        'three.js demo site'\r\n      ]\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <main role=\"main\" id=\"project-section\" className=\"projects\">\r\n      <h1>PROJECTS</h1>\r\n      <div className=\"projects-content\">\r\n        {\r\n          projectDetails.map((project, i) => (<AccordionDrawer key={i} alt={project.alt} title={project.title} content={project.content} link={project.link} cta={project.cta} />))\r\n        }\r\n      </div>\r\n      <p className=\"character-container\" alt=\"a custom font is used which transforms alpha-numeric characters in to pixel monsters\">hunter</p>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Projects","import React from 'react'\r\nimport './contact.css'\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <main role=\"main\" id=\"contact-section\" className=\"contact\">\r\n      <h1>CONTACT</h1>\r\n      <div className=\"contact-content\">\r\n        <p>email: huntertread at gmail</p>\r\n      </div>\r\n      <p alt=\"a custom font is used which transforms alpha-numeric characters in to pixel monsters\" className=\"character-container\">aaaa</p>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Contact","import React from 'react'\r\nimport './footer.css'\r\n\r\nconst Footer = () => {\r\n\r\n  return (\r\n    <footer role=\"contentinfo\" className=\"footer\">\r\n      <a role=\"img\" target=\"blank\" aria-label=\"github link\" href=\"https://github.com/huntertread\" ><i className=\"fa fa-github\" /></a>\r\n      <a role=\"img\" target=\"blank\" aria-label=\"linkedin link\" href=\"https://www.linkedin.com/in/huntertread/\" ><i className=\"fa fa-linkedin\" /></a>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\nimport Header from './Header/Header'\r\nimport Homepage from './Homepage/Homepage'\r\nimport About from './About/About'\r\nimport Projects from './Projects/Projects'\r\nimport Contact from './Contact/Contact'\r\nimport Footer from './Footer/Footer'\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Homepage />\r\n      <About />\r\n      <Projects />\r\n      <Contact />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <div className=\"crt\">\r\n      <App />\r\n    </div>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}