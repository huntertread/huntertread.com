{"version":3,"sources":["Header/HamburgerNav/OpenBurger/OpenBurger.js","Header/HamburgerNav/HamburgerNav.js","Header/Header.js","Homepage/Homepage.js","About/About.js","Projects/AccordionDrawer/AccordionDrawer.js","Projects/Projects.js","Contact/Contact.js","Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["OpenBurger","isOpen","setIsOpen","view","setView","burgerClick","newView","viewClass","className","onClick","href","alt","HamburgerNav","useState","role","aria-label","Header","minDeviceWidth","maxDeviceWidth","Homepage","id","About","download","counter","AccordionDrawer","title","content","link","cta","iconState","setIconState","accContent","target","Projects","Contact","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f3560efa.chunk.js","sourcesContent":["import React from 'react'\nimport './openburger.css'\n\nconst OpenBurger = ({ isOpen, setIsOpen, view, setView }) => {\n\n  const burgerClick = (newView) => {\n    setView(newView)\n    setIsOpen(!isOpen)\n  }\n\n  let viewClass = null\n\n  if (view === 'home') {\n    viewClass = 'open-burger-home'\n  } else if (view === 'about') {\n    viewClass = 'open-burger-about'\n  } else if (view === 'projects') {\n    viewClass = 'open-burger-projects'\n  } else if (view === 'contact') {\n    viewClass = 'open-burger-contact'\n  }\n\n  return (\n    <nav className={viewClass}>\n      <i className=\"fa fa-close\" onClick={() => setIsOpen(!isOpen)}></i>\n      <a href=\"#home-section\" alt=\"go to home\" onClick={() => burgerClick('home')}>Home</a>\n      <a href=\"#about-section\" alt=\"go to about\" onClick={() => burgerClick('about')}>About</a>\n      <a href=\"#project-section\" alt=\"go to projects\" onClick={() => burgerClick('projects')}>Projects</a>\n      <a href=\"#contact-section\" alt=\"go to contact\" onClick={() => burgerClick('contact')}>Contact</a>\n    </nav>\n  )\n}\n\nexport default OpenBurger","import React, { useState } from 'react'\nimport OpenBurger from './OpenBurger/OpenBurger'\nimport './hamburgernav.css'\n\nconst HamburgerNav = ({ view, setView }) => {\n\n  const [isOpen, setIsOpen] = useState(false)\n\n  let viewClass = null\n\n  if (view === 'home') {\n    viewClass = 'header-home-mobile'\n  } else if ( view === 'about') {\n    viewClass = 'header-about-mobile'\n  } else if (view === 'projects') {\n    viewClass = 'header-project-mobile'\n  } else if (view === 'contact') {\n    viewClass = 'header-contact-mobile'\n  }\n\n  if (isOpen === false) {\n    return (\n      <nav role=\"banner navigation\" aria-label=\"Main Navigation\" className={viewClass}>\n        <i onClick={() => setIsOpen(!isOpen)} className=\"fa fa-bars\"></i>\n      </nav>\n    )\n  } else if (isOpen === true) {\n    return (\n      <OpenBurger isOpen={isOpen} setIsOpen={setIsOpen} setView={setView} view={view}/>\n    )\n  }\n}\n\nexport default HamburgerNav","import React, { useState } from 'react'\nimport MediaQuery from 'react-responsive'\nimport HamburgerNav from './HamburgerNav/HamburgerNav'\nimport './header.css'\n\nconst Header = () => {\n\n  const [view, setView] = useState('home')\n\n  if (view === 'home') {\n    return (\n      <div>\n        <MediaQuery minDeviceWidth={520}>\n          <nav role=\"banner navigation\" aria-label=\"Main Navigation\" className=\"header-home\">\n            <a href=\"#home-section\" alt=\"go to home\" className=\"selected\" onClick={() => setView('home')}>Home</a>\n            <a href=\"#about-section\" alt=\"go to about\" onClick={() => setView('about')}>About</a>\n            <a href=\"#project-section\" alt=\"go to projects\" onClick={() => setView('projects')}>Projects</a>\n            <a href=\"#contact-section\" alt=\"go to contact\" onClick={() => setView('contact')}>Contact</a>\n          </nav>\n        </MediaQuery>\n        <MediaQuery maxDeviceWidth={520}>\n          <HamburgerNav view={view} setView={setView}/>\n        </MediaQuery>\n      </div>\n    )\n  } else if (view === 'about') {\n    return (\n      <div>\n        <MediaQuery minDeviceWidth={520}>\n          <nav role=\"banner navigation\" aria-label=\"Main Navigation\" className=\"header-about\">\n            <a href=\"#home-section\" alt=\"go to home\" onClick={() => setView('home')}>Home</a>\n            <a href=\"#about-section\" alt=\"go to about\" className=\"selected\" onClick={() => setView('about')}>About</a>\n            <a href=\"#project-section\" alt=\"go to projects\" onClick={() => setView('projects')}>Projects</a>\n            <a href=\"#contact-section\" alt=\"go to contact\" onClick={() => setView('contact')}>Contact</a>\n          </nav>\n        </MediaQuery>\n        <MediaQuery maxDeviceWidth={520}>\n          <HamburgerNav view={view} setView={setView}/>\n        </MediaQuery>\n      </div>\n    )\n  } else if (view === 'projects') {\n    return (\n      <div>\n        <MediaQuery minDeviceWidth={520}>\n          <nav role=\"banner navigation\" aria-label=\"Main Navigation\" className=\"header-projects\">\n            <a href=\"#home-section\" alt=\"go to home\" onClick={() => setView('home')}>Home</a>\n            <a href=\"#about-section\" alt=\"go to about\" onClick={() => setView('about')}>About</a>\n            <a href=\"#project-section\" alt=\"go to projects\" className=\"selected\" onClick={() => setView('projects')}>Projects</a>\n            <a href=\"#contact-section\" alt=\"go to contact\" onClick={() => setView('contact')}>Contact</a>\n          </nav>\n        </MediaQuery>\n        <MediaQuery maxDeviceWidth={520}>\n          <HamburgerNav view={view} setView={setView}/>\n        </MediaQuery>\n      </div>\n    )\n  } else if (view === 'contact') {\n    return (\n      <div>\n        <MediaQuery minDeviceWidth={520}>\n          <nav role=\"banner navigation\" aria-label=\"Main Navigation\" className=\"header-contact\">\n            <a href=\"#home-section\" alt=\"go to home\" onClick={() => setView('home')}>Home</a>\n            <a href=\"#about-section\" alt=\"go to about\" onClick={() => setView('about')}>About</a>\n            <a href=\"#project-section\" alt=\"go to projects\" onClick={() => setView('projects')}>Projects</a>\n            <a href=\"#contact-section\" alt=\"go to contact\" className=\"selected\" onClick={() => setView('contact')}>Contact</a>\n          </nav>\n        </MediaQuery>\n        <MediaQuery maxDeviceWidth={520}>\n          <HamburgerNav view={view} setView={setView}/>\n        </MediaQuery>\n      </div>\n    )\n  }\n}\n\nexport default Header","import React from 'react'\nimport './homepage.css'\n\nconst Homepage = () => {\n  return (\n    <main role=\"main\" id=\"home-section\" className=\"homepage\">\n      <h1>HUNTER<br/>TREADAWAY</h1>\n      <p className=\"character-container\">q h</p>\n    </main>\n  )\n}\n\nexport default Homepage","import React from 'react'\nimport './about.css'\n\nconst About = () => {\n  return (\n    <main role=\"main\" id=\"about-section\" className=\"about\">\n      <h1>ABOUT</h1>\n      <div className=\"about-content\">\n        <h3 className=\"about-headline\">Hunter is a web developer residing in Los Angeles, CA. He aims to surprise users with unexpected interactions and design choices. He enjoys working with:</h3>\n        <p>JavaScript | HTML5 | CSS3</p>\n        <p>React | React-Native | ViroReact | Styled-Components | D3 | jQuery | node.js</p>\n        <p>MySQL | PostgreSQL | MongoDB</p>\n        <p>windows | linux | mac</p>\n      </div>\n      <a href=\"./downloadFiles/Hunter_Treadaway_Software_Engineering_Resume.pdf\" download>Download My Resume</a>\n      <p className=\"character-container\">yuyuy</p>\n    </main>\n  )\n}\n\nexport default About","import React, { useState } from 'react'\nimport './accordiondrawer.css'\n\nlet counter = 0;\n\nconst AccordionDrawer = ({title, content, link, cta}) => {\n\n  const [isOpen, setIsOpen] = useState(false)\n  const [iconState, setIconState] = useState('closed')\n\n  let accContent = null;\n\n  const onClickOpen = () => {\n    if (counter % 2 === 0) {\n      setIsOpen(!isOpen)\n      setIconState('open')\n      counter++\n    } else {\n      setIsOpen(!isOpen)\n      setIconState('closed')\n      counter++\n    }\n  }\n\n  if (isOpen === true) {\n    accContent =\n      <div className=\"accordion-content\">\n        <p>{content}</p>\n        <a className=\"project-cta\" href={link} target=\"blank\" alt={`go to ${title} source code or live example`}>{cta}</a>\n      </div>\n  }\n\n  return (\n    <div>\n    <div className=\"accordion-header\">\n      <p>{title}</p>\n      <i id={iconState} className=\"fa fa-plus\" onClick={onClickOpen}></i>\n    </div>\n      <div>{accContent}</div>\n    </div>\n\n  )\n}\n\nexport default AccordionDrawer","import React from 'react'\nimport AccordionDrawer from './AccordionDrawer/AccordionDrawer'\nimport './projects.css'\n\nconst Projects = () => {\n\n  const htContent = 'this website right here!'\n  const htLink = ''\n  const htCta = 'View source-code on GitHub'\n\n  const threeContent = 'a fancy three.js project'\n  const threeLink = ''\n  const threeCta = 'Go To Project'\n\n  const ecommContent = 'a sampling of e-commerce components in the neumorphic design style'\n  const ecommLink = 'https://github.com/huntertread/e-comm-components'\n  const ecommCta = 'Go To Project'\n\n  const sysDisContent =\n    'Optimized the back end of an inherited microservice component. '\n    + 'Generated and seeded 20 Million simulated property records to MongoDB hosted on t2.micro. '\n    + 'Horizontally scaled proxy server layer to 3 separate t2.micro instances. '\n    + 'Utilized NGINX and round-robin technique to load balance throughput of test loads from Loader.io. '\n    + 'Achieved an average of 3000 RPS (up from benchmark of ~100 RPS) with 80ms latency (down from benchmark of ~1000ms) and less than 1% error rate. '\n  const sysDisLink = 'https://github.com/SDC-Designer-Designers/search-bar-booking-tool'\n  const sysDisCta = 'View source-code on GitHub'\n\n  return (\n    <main role=\"main\" id=\"project-section\" className=\"projects\">\n      <h1>PROJECTS</h1>\n      <div className=\"projects-content\">\n        <AccordionDrawer title={'huntertreadaway.com'} content={htContent} link={htLink} cta={htCta} />\n        <AccordionDrawer title={'unknown three.js projects'} content={threeContent} link={threeLink} cta={threeCta} />\n        <AccordionDrawer title={'e-comm components'} content={ecommContent} link={ecommLink} cta={ecommCta} />\n        <AccordionDrawer title={'system design capstone'} content={sysDisContent} link={sysDisLink} cta={sysDisCta} />\n      </div>\n      <p className=\"character-container\">hunter</p>\n    </main>\n  )\n}\n\nexport default Projects","import React from 'react'\nimport './contact.css'\n\nconst Contact = () => {\n  return (\n    <main role=\"main\" id=\"contact-section\" className=\"contact\">\n      <h1>CONTACT</h1>\n      <div className=\"contact-content\">\n        <p>email: huntertread at gmail</p>\n      </div>\n      <p className=\"character-container\">aaaa</p>\n    </main>\n  )\n}\n\nexport default Contact","import React from 'react'\nimport './footer.css'\n\nconst Footer = () => {\n\n  return (\n    <footer role=\"contentinfo\" className=\"footer\">\n      <a target=\"blank\" aria-label=\"github link\" href=\"https://github.com/huntertread\" ><i className=\"fa fa-github\" /></a>\n      <a target=\"blank\" aria-label=\"linkedin link\" href=\"https://www.linkedin.com/in/huntertread/\" ><i className=\"fa fa-linkedin\" /></a>\n      <a target=\"blank\" aria-label=\"instagram link\" href=\"https://www.instagram.com/protozoasaur/?hl=en\" ><i className=\"fa fa-instagram\" /></a>\n    </footer>\n  )\n}\n\nexport default Footer","import React from 'react';\nimport Header from './Header/Header'\nimport Homepage from './Homepage/Homepage'\nimport About from './About/About'\nimport Projects from './Projects/Projects'\nimport Contact from './Contact/Contact'\nimport Footer from './Footer/Footer'\nimport './App.css';\n\nconst App = () => {\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Homepage />\n      <About />\n      <Projects />\n      <Contact />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}