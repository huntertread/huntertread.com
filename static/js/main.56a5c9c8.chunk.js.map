{"version":3,"sources":["Header/HamburgerNav/OpenBurger/OpenBurger.js","Header/HamburgerNav/HamburgerNav.js","Header/Header.js","Homepage/Homepage.js","About/About.js","Projects/AccordionDrawer/AccordionDrawer.js","Projects/AccordionContainer/AccordionContainer.js","Projects/Projects.js","Contact/Contact.js","Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["OpenBurger","isOpen","setIsOpen","view","setView","burgerClick","newView","viewClass","className","onClick","href","alt","HamburgerNav","burger","useState","CSSTransition","key","classNames","timeout","enter","exit","role","aria-label","TransitionGroup","Header","minDeviceWidth","tabIndex","maxDeviceWidth","Homepage","id","About","target","AccordionDrawer","props","onClickOpen","bind","onKeyEnter","this","toggleAccordion","event","activeId","iconState","accOpen","title","onKeyPress","content","map","item","i","link","rel","cta","Component","AccordionContainer","state","setState","prevState","projectDetails","project","Projects","Contact","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.56a5c9c8.chunk.js","sourcesContent":["import React from 'react'\nimport './openburger.css'\n\nconst OpenBurger = ({ isOpen, setIsOpen, view, setView }) => {\n\n  const burgerClick = (newView) => {\n    setView(newView)\n    setIsOpen(!isOpen)\n  }\n\n  let viewClass = null\n\n  if (view === 'home') {\n    viewClass = 'open-burger-home'\n  } else if (view === 'about') {\n    viewClass = 'open-burger-about'\n  } else if (view === 'projects') {\n    viewClass = 'open-burger-projects'\n  } else if (view === 'contact') {\n    viewClass = 'open-burger-contact'\n  }\n\n  return (\n    <nav className={viewClass}>\n      <div className=\"close-button-container\">\n        <i className=\"fa fa-close\" onClick={() => setIsOpen(!isOpen)}></i>\n      </div>\n      < div className=\"nav-button-container\">\n        <a href=\"#home-section\" alt=\"go to home\" onClick={() => burgerClick('home')}>Home</a>\n        <a href=\"#about-section\" alt=\"go to about\" onClick={() => burgerClick('about')}>About</a>\n        <a href=\"#project-section\" alt=\"go to projects\" onClick={() => burgerClick('projects')}>Projects</a>\n        <a href=\"#contact-section\" alt=\"go to contact\" onClick={() => burgerClick('contact')}>Contact</a>\n      </div>\n    </nav>\n  )\n}\n\nexport default OpenBurger","import React, { useState } from 'react'\nimport OpenBurger from './OpenBurger/OpenBurger'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\nimport './hamburgernav.css'\n\nconst HamburgerNav = ({ view, setView }) => {\n\n  const [isOpen, setIsOpen] = useState(false)\n\n  let viewClass = null\n\n  if (view === 'home') {\n    viewClass = 'header-home-mobile'\n  } else if ( view === 'about') {\n    viewClass = 'header-about-mobile'\n  } else if (view === 'projects') {\n    viewClass = 'header-project-mobile'\n  } else if (view === 'contact') {\n    viewClass = 'header-contact-mobile'\n  }\n\n  let burger;\n\n  if (isOpen === false) {\n    burger = null;\n  } else if (isOpen === true) {\n    burger =\n      <CSSTransition\n        key=\"1\"\n        classNames=\"nav-transition\"\n        timeout={{ enter: 500, exit: 300 }}>\n          <div className=\"burger-container\">\n            <OpenBurger isOpen={isOpen} setIsOpen={setIsOpen} setView={setView} view={view}/>;\n          </div>\n      </CSSTransition>\n  }\n\n  return (\n    <div>\n      <nav role=\"banner navigation\" aria-label=\"main navigation\" className={viewClass}>\n        <i onClick={() => setIsOpen(!isOpen)} className=\"fa fa-bars\"></i>\n      </nav>\n      <TransitionGroup>\n        {burger}\n      </TransitionGroup>\n    </div>\n  )\n}\n\nexport default HamburgerNav","import React, { useState } from 'react'\nimport MediaQuery from 'react-responsive'\nimport HamburgerNav from './HamburgerNav/HamburgerNav'\nimport './header.css'\n\nconst Header = () => {\n\n  const [view, setView] = useState('home')\n\n  if (view === 'home') {\n    return (\n      <div>\n        <MediaQuery minDeviceWidth={520}>\n          <nav role=\"banner navigation\" aria-label=\"Main Navigation\" className=\"header-home\">\n            <a tabIndex=\"1\" href=\"#home-section\" alt=\"navigate to home\" className=\"selected\" onClick={() => setView('home')}>Home</a>\n            <a tabIndex=\"2\" href=\"#about-section\" alt=\"navigate to about\" onClick={() => setView('about')}>About</a>\n            <a tabIndex=\"3\" href=\"#project-section\" alt=\"navigate to projects\" onClick={() => setView('projects')}>Projects</a>\n            <a tabIndex=\"4\" href=\"#contact-section\" alt=\"navigate to contact\" onClick={() => setView('contact')}>Contact</a>\n          </nav>\n        </MediaQuery>\n        <MediaQuery maxDeviceWidth={520}>\n          <HamburgerNav view={view} setView={setView}/>\n        </MediaQuery>\n      </div>\n    )\n  } else if (view === 'about') {\n    return (\n      <div>\n        <MediaQuery minDeviceWidth={520}>\n          <nav role=\"banner navigation\" aria-label=\"Main Navigation\" className=\"header-about\">\n            <a tabIndex=\"1\" href=\"#home-section\" alt=\"navigate to home\" onClick={() => setView('home')}>Home</a>\n            <a tabIndex=\"2\" href=\"#about-section\" alt=\"navigate to about\" className=\"selected\" onClick={() => setView('about')}>About</a>\n            <a tabIndex=\"3\" href=\"#project-section\" alt=\"navigate to projects\" onClick={() => setView('projects')}>Projects</a>\n            <a tabIndex=\"4\" href=\"#contact-section\" alt=\"navigate to contact\" onClick={() => setView('contact')}>Contact</a>\n          </nav>\n        </MediaQuery>\n        <MediaQuery maxDeviceWidth={520}>\n          <HamburgerNav view={view} setView={setView}/>\n        </MediaQuery>\n      </div>\n    )\n  } else if (view === 'projects') {\n    return (\n      <div>\n        <MediaQuery minDeviceWidth={520}>\n          <nav role=\"banner navigation\" aria-label=\"Main Navigation\" className=\"header-projects\">\n            <a tabIndex=\"1\" href=\"#home-section\" alt=\"navigate to home\" onClick={() => setView('home')}>Home</a>\n            <a tabIndex=\"2\" href=\"#about-section\" alt=\"navigate to about\" onClick={() => setView('about')}>About</a>\n            <a tabIndex=\"3\" href=\"#project-section\" alt=\"navigate to projects\" className=\"selected\" onClick={() => setView('projects')}>Projects</a>\n            <a tabIndex=\"4\" href=\"#contact-section\" alt=\"navigate to contact\" onClick={() => setView('contact')}>Contact</a>\n          </nav>\n        </MediaQuery>\n        <MediaQuery maxDeviceWidth={520}>\n          <HamburgerNav view={view} setView={setView}/>\n        </MediaQuery>\n      </div>\n    )\n  } else if (view === 'contact') {\n    return (\n      <div>\n        <MediaQuery minDeviceWidth={520}>\n          <nav role=\"banner navigation\" aria-label=\"Main Navigation\" className=\"header-contact\">\n            <a tabIndex=\"1\" href=\"#home-section\" alt=\"navigate to home\" onClick={() => setView('home')}>Home</a>\n            <a tabIndex=\"2\" href=\"#about-section\" alt=\"navigate to about\" onClick={() => setView('about')}>About</a>\n            <a tabIndex=\"3\" href=\"#project-section\" alt=\"navigate to projects\" onClick={() => setView('projects')}>Projects</a>\n            <a tabIndex=\"4\" href=\"#contact-section\" alt=\"navigate to contact\" className=\"selected\" onClick={() => setView('contact')}>Contact</a>\n          </nav>\n        </MediaQuery>\n        <MediaQuery maxDeviceWidth={520}>\n          <HamburgerNav view={view} setView={setView}/>\n        </MediaQuery>\n      </div>\n    )\n  }\n}\n\nexport default Header","import React from 'react'\nimport './homepage.css'\n\nconst Homepage = () => {\n  return (\n    <main role=\"main\" id=\"home-section\" className=\"homepage\">\n      <h1>HUNTER<br/>TREADAWAY</h1>\n      <h3>The PM You've Been Looking For</h3>\n      <p alt=\"a custom font is used which transforms alpha-numeric characters in to pixel monsters\" className=\"character-container\">&nbsp;</p>\n    </main>\n  )\n}\n\nexport default Homepage","import React from 'react'\nimport './about.css'\n\nconst About = () => {\n  return (\n    <main role=\"main\" id=\"about-section\" className=\"about\">\n      <h1>ABOUT</h1>\n      <div className=\"about-content\">\n        <h3 className=\"about-headline\">Hunter is a Project Manager in Princeton, NJ.</h3>\n        {/* <p>JavaScript | HTML5 | CSS3 | Bash</p>\n        <p>React | Redux | Node | jQuery</p>\n        <p>Styled-Components | SASS | SCSS</p>\n        <p>Jest | Enzyme | Mocha | Chai</p>\n        <p>MySQL | PostgreSQL | MongoDB</p>\n        <p>AWS EC2 | S3 | Route53</p> */}\n        <p>Certified Scrum Master. Fluent in Agile, Scrum, Waterfall</p>\n        <p>Jira, Asana, Trello. Comfortable with any PM tool</p>\n        <p>5 Years Experience in Digital Advertising</p>\n        <p>5 Years Experience in FinTech</p>\n        <p>10 years managing or working in development teams</p>\n        <p>10 years delivering in high pressure environments</p>\n        {/* <p>Hunter is calmer than a Fruitger Aero playlist</p> */}\n        {/* <p>Yes, he IS a project manager but he's also so much more</p>\n        <p>He is a <a href=\"https://www.instagram.com/protozoasaur/\" target=\"blank\">multi-media artist</a> with front end development experience</p>\n        <p>Hunter likes to do it all, he doesnt want to be put in a box</p>\n        <p>Hunter wants to break free of the norm</p>\n        <p>Hunter is calmer than a Frutiger Aero playlist</p>\n        <p>He's also super kind and easy to work with (check out his LI refs)</p> */}\n      </div>\n      <a href=\"./downloadFiles/Hunter_Treadaway_Front_End_Software_Engineer.pdf\" target=\"blank\" >Resume</a>\n      <p alt=\"a custom font is used which transforms alpha-numeric characters in to pixel monsters\" className=\"character-container\">55</p>\n    </main>\n  )\n}\n\nexport default About","import React, { Component } from 'react'\nimport './accordiondrawer.css'\n\n// class AccordionDrawer extends Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       counter: 0,\n//       isOpen: false,\n//       iconState: 'closed'\n//     }\n//     this.setIsOpen = this.setIsOpen.bind(this);\n//     this.setIconState = this.setIconState.bind(this);\n//     this.onClickOpen = this.onClickOpen.bind(this);\n//     this.onKeyEnter = this.onKeyEnter.bind(this);\n//   }\n\n//   setIsOpen() {\n//     this.setState({isOpen: !this.state.isOpen});\n//   }\n\n//   setIconState(state) {\n//     this.setState({iconState: state})\n//   }\n\n//   onClickOpen() {\n//     if (this.state.counter % 2 === 0) {\n//       this.setIsOpen()\n//       this.setIconState('open')\n//       this.setState({counter: this.state.counter += 1})\n//     } else {\n//       this.setIsOpen()\n//       this.setIconState('closed')\n//       this.setState({counter: this.state.counter += 1})\n//     }\n//   }\n\n//   onKeyEnter(event) {\n//     if (event.key === 'Enter') {\n//       if (this.state.counter % 2 === 0) {\n//         this.setIsOpen()\n//         this.setIconState('open')\n//         this.setState({counter: this.state.counter += 1})\n//       } else {\n//         this.setIsOpen()\n//         this.setIconState('closed')\n//         this.setState({counter: this.state.counter += 1})\n//       }\n//     }\n//   }\n\n//   render() {\n\n//     let accOpen = \"\";\n\n//     if (this.state.isOpen === false) {\n//       accOpen = \"\";\n//     } else if (this.state.isOpen === true) {\n//       accOpen = \"open\"\n//     }\n\n//     return (\n//       <div>\n//         <div className=\"accordion-header\">\n//           <p>{this.props.title}</p>\n//           <i role=\"img\" alt=\"icon, click or press to expand with additional content\" id={this.state.iconState} className=\"fa fa-plus\" onClick={this.onClickOpen} onKeyPress={this.onKeyEnter} tabIndex=\"0\"></i>\n//         </div>\n//         <div className={`accordion-content ${accOpen}`}>\n//           <ul className=\"accordion-list\">\n//             {this.props.content.map((item, i) => (<li>{item}</li>))}\n//           </ul>\n//           <a className=\"project-cta\" href={this.props.link} target=\"blank\" alt={`go to ${this.props.title} source code or live example`}>{this.props.cta}</a>\n//         </div>\n//       </div>\n//     )\n//   }\n// }\n\n// export default AccordionDrawer\n\nclass AccordionDrawer extends Component {\n  constructor(props) {\n    super(props);\n    this.onClickOpen = this.onClickOpen.bind(this);\n    this.onKeyEnter = this.onKeyEnter.bind(this);\n  }\n\n  onClickOpen() {\n    this.props.toggleAccordion(this.props.id);\n  }\n\n  onKeyEnter(event) {\n    if (event.key === 'Enter') {\n      this.props.toggleAccordion(this.props.id);\n    }\n  }\n\n  render() {\n    const isOpen = this.props.activeId === this.props.id;\n    const iconState = isOpen ? 'open' : 'closed';\n    const accOpen = isOpen ? 'open' : '';\n\n    return (\n      <div>\n        <div className=\"accordion-header\">\n          <p>{this.props.title}</p>\n          <i\n            role=\"img\"\n            alt=\"icon, click or press to expand with additional content\"\n            id={iconState}\n            className=\"fa fa-plus\"\n            onClick={this.onClickOpen}\n            onKeyPress={this.onKeyEnter}\n            tabIndex=\"0\"\n          ></i>\n        </div>\n        <div className={`accordion-content ${accOpen}`}>\n          <ul className=\"accordion-list\">\n            {this.props.content.map((item, i) => (\n              <li key={i}>{item}</li>\n            ))}\n          </ul>\n          <a\n            className=\"project-cta\"\n            href={this.props.link}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            alt={`go to ${this.props.title} source code or live example`}\n          >\n            {this.props.cta}\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AccordionDrawer;\n","import React, { Component } from 'react';\nimport AccordionDrawer from '../AccordionDrawer/AccordionDrawer';\n\n// class AccordionContainer extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       activeId: null\n//     };\n//     this.toggleAccordion = this.toggleAccordion.bind(this);\n//   }\n\n//   toggleAccordion(id) {\n//     this.setState((prevState) => ({\n//       activeId: prevState.activeId === id ? null : id\n//     }));\n//   }\n\n//   render() {\n//     const data = [\n//       {\n//         id: 1,\n//         title: 'Accordion One',\n//         content: ['Item A', 'Item B'],\n//         link: '#',\n//         cta: 'View More'\n//       },\n//       {\n//         id: 2,\n//         title: 'Accordion Two',\n//         content: ['Item C', 'Item D'],\n//         link: '#',\n//         cta: 'Check it Out'\n//       }\n//     ];\n\n//     return (\n//       <div>\n//         {data.map((item) => (\n//           <AccordionDrawer\n//             key={item.id}\n//             id={item.id}\n//             title={item.title}\n//             content={item.content}\n//             link={item.link}\n//             cta={item.cta}\n//             activeId={this.state.activeId}\n//             toggleAccordion={this.toggleAccordion}\n//           />\n//         ))}\n//       </div>\n//     );\n//   }\n// }\n\nclass AccordionContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeId: null\n    };\n    this.toggleAccordion = this.toggleAccordion.bind(this);\n  }\n\n  toggleAccordion(id) {\n    this.setState((prevState) => ({\n      activeId: prevState.activeId === id ? null : id\n    }));\n  }\n\n  render() {\n    return (\n      <>\n        {this.props.projectDetails.map((project, i) => (\n          <AccordionDrawer\n            key={i}\n            id={i}\n            title={project.title}\n            content={project.content}\n            link={project.link}\n            cta={project.cta}\n            activeId={this.state.activeId}\n            toggleAccordion={this.toggleAccordion}\n          />\n        ))}\n      </>\n    );\n  }\n}\n\nexport default AccordionContainer;\n","import React from 'react'\nimport AccordionDrawer from './AccordionDrawer/AccordionDrawer'\nimport AccordionContainer from './AccordionContainer/AccordionContainer'\nimport './projects.css'\n\nconst Projects = () => {\n\n  const projectDetails = [\n    {\n      title: 'patmcgrath.com',\n      link: 'https://patmcgrath.com/pages/shadefinder',\n      cta: 'Go To PMG Shadefinder',\n      alt: 'pat mcgrath website link',\n      content: [\n        'Shopify | Liquid | SCSS | React | jQuery | Git',\n        'Worked as a freelance developer in a collaborative team environment to deliver new product features and enhancements',\n        'Shadefinder Quiz Modal - react app to help users find their shade of concealer and/or foundation'\n      ]\n    },\n    {\n      title: 'theoog.net',\n      link: 'https://theoog.net',\n      cta: 'Go To Project',\n      alt: 'the oog url shortener project details',\n      content: [\n        'React | Redux | Node | Express | PostgreSQL',\n        'Web server, database, reverse proxy and Node server on distributed EC2 instances',\n        'Restful API on theoog.net subdomain',\n        'Test suites in Jest/Enzyme and Mocha/Chai',\n        'Responsive front end'\n      ]\n    },\n    // {\n    //   title: 'mrzmedical.com',\n    //   link: 'http://mrzmedical.com',\n    //   cta: 'Go to MRZ Medical',\n    //   alt: 'MRZ Medical Wordpress Site',\n    //   content: [\n    //     'Updated existing Wordpress theme with Covid-19 components',\n    //     'Added Patient Education and Forms pages',\n    //     'Refactored site to be mobile friendly with custom Media Queries',\n    //     'Fixed broken contact form and \"Patient Portal\" CTA on homepage'\n    //   ]\n    // },\n    // {\n    //   title: 'huntertread.com',\n    //   link: 'https://github.com/huntertread/personal-site',\n    //   cta: 'View Code On GitHub',\n    //   alt: 'hunter treadaway personal site project details',\n    //   content: [\n    //     'React Hooks',\n    //     'Responsive design',\n    //     'WCAG Compliant',\n    //     'Unit tested with Jest/Enzyme',\n    //     'Google Analytics'\n    //   ]\n    // },\n    {\n      title: 'raziasahi.com',\n      link: 'https://raziasahi.com',\n      cta: 'View Site',\n      alt: 'razia sahi personal website',\n      content: [\n        'jQuery | HTML | CSS',\n        'Responsive design'\n      ]\n    }\n    // {\n    //   title: 'microservice optimization',\n    //   link: 'https://github.com/SDC-Designer-Designers/search-bar-booking-tool',\n    //   cta: 'View Code on GitHub',\n    //   alt: 'system design capstone project details',\n    //   content: [\n    //     'Optimized the back end of an inherited microservice.',\n    //     'Generated and seeded 20 Million records to MongoDB to simulate enterprise level data set.',\n    //     'Horizontally scaled proxy server layer to 3 t2.micro instances.',\n    //     'Utilized NGINX to load balance throughput of test loads from Loader.io.',\n    //     'Achieved an average of 3000 RPS (up from benchmark of ~100 RPS) with 80ms latency (down from benchmark of ~1000ms) and less than 1% error rate.'\n    //   ]\n    // }\n    // {\n    //   title: 'three.js demo',\n    //   link: 'https://huntertread.github.io/threejsdemo/',\n    //   cta: 'Go To Project',\n    //   alt: 'three.js demo project details',\n    //   content: [\n    //     'UNDER CONSTRUCTION',\n    //     'three.js demo site'\n    //   ]\n    // }\n  ]\n\n  return (\n    <main role=\"main\" id=\"project-section\" className=\"projects\">\n      <h1>PROJECTS</h1>\n\n      {/* <div className=\"projects-content\">\n        {\n          projectDetails.map((project, i) => (<AccordionDrawer key={i} alt={project.alt} title={project.title} content={project.content} link={project.link} cta={project.cta} />))\n        }\n      </div> */}\n\n      <div className=\"projects-content\">\n        <AccordionContainer projectDetails={projectDetails} />\n      </div>\n      <p className=\"character-container\" alt=\"a custom font is used which transforms alpha-numeric characters in to pixel monsters\">.</p>\n    </main>\n  )\n}\n\nexport default Projects","import React from 'react'\nimport './contact.css'\n\nconst Contact = () => {\n  return (\n    <main role=\"main\" id=\"contact-section\" className=\"contact\">\n      <h1>CONTACT</h1>\n      <div className=\"contact-content\">\n        <p>email: huntertread@gmail.com</p>\n      </div>\n      <p alt=\"a custom font is used which transforms alpha-numeric characters in to pixel monsters\" className=\"character-container\">J</p>\n    </main>\n  )\n}\n\nexport default Contact","import React from 'react'\nimport './footer.css'\n\nconst Footer = () => {\n\n  return (\n    <footer role=\"contentinfo\" className=\"footer\">\n      <a role=\"img\" target=\"blank\" aria-label=\"github link\" href=\"https://github.com/huntertread\" ><i className=\"fa fa-github\" /></a>\n      <a role=\"img\" target=\"blank\" aria-label=\"linkedin link\" href=\"https://www.linkedin.com/in/huntertread/\" ><i className=\"fa fa-linkedin\" /></a>\n    </footer>\n  )\n}\n\nexport default Footer","import React from 'react';\nimport Header from './Header/Header'\nimport Homepage from './Homepage/Homepage'\nimport About from './About/About'\nimport Projects from './Projects/Projects'\nimport Contact from './Contact/Contact'\nimport Footer from './Footer/Footer'\nimport './App.css';\n\nconst App = () => {\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Homepage />\n      <About />\n      <Projects />\n      <Contact />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"crt\">\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}